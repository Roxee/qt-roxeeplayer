================
RoxeePlayer
================

RoxeePlayer is a thin layer library on top of libvlc that exposes a QT-ified (scriptable) API for it.

It is meant:
- to be cross-platform (specifically sports OSX, unlike other libraries)
- to be usable either as a simple QWidget or as a WebView plugin for HTML oriented webrunners
- primarily to serve as part of the Roxee runner application, though other people might find interest in it

There exist at least two other implementations with similar purpose (save scriptability, strict libvlc isolation and OSX support):
- https://bitbucket.org/trollixx/qtvlc/
- https://github.com/ntadej/vlc-qt/tree/master/src/core

This is licensed under LGPL (same as libvlc).

================
For the impatients
================

Open qt-roxeeplayer.pro with QtCreator.

Edit src/vars/vars.pri and point ROXEE_EXTERNAL to your vlc sdk folder

Build.

Run the demo.


================
How to build (details)
================

Inside src/vars/vars.pri, you may additionally pick an output build folder (ROXEE_DESTDIR),

You can also decide to build a dynamic or static library.

By default, the project builds a shared library, and on OSX fetches VLC from the network.

Note that any of the vars.pri variables (ROXEE_*) may be overriden from the environment.
eg: ROXEE_LINK_TYPE=static qmake CONFIG+=debug


================
How to create your own application
================

Link against the builded roxeeplayer library, and include the includes...

Don't forget to put libvlc, libvlccore and the vlc plugins folder near the binary (if statically compiled)

Look into the demo subproject for inspiration, and read the headers.

You can use either the SimplePlayer, which is a QWidget, or the WebPlugin factory if you
want an html-usable plugin.

================
About the "third-party" folder
================

On OSX, ./bootstrap.sh is called and does fetch VLC *binary* release to be linked by the project.

BE AWARE that no verification of any sort is performed on the retrieved binary, and that it is fetched over
unencrypted http. You really shouldn't *release* anything using that method if you give a fuck.

================
Caveats and compatibility.
================

On windows, if you built statically, you need to DEFINES += LIBROXEEPLAYER_USE_STATIC in your app.

Should build with either ming or msvc.

This should compile against QT4 as well, though I mainly use QT5 nowadays, so if it doesn't ping me.

Failure to start your application, or vlc complaining usually means it can't find either
libvlc or the plugins folder.

Last, in its WebPlugin form, the shit will crash if your object tag is resized dynamically.
Sounds like a QtWebKit bug...
Only solution is to throttle resizes on the node in javascript.

================
API
================

Doxygen documentation should be generated as part of the build if you have the doxygen binary,
though the doc effort is slick right now...
